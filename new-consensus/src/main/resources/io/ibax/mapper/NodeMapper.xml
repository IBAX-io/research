<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.ibax.mapper.NodeMapper">
	<resultMap type="Node" id="NodesResultMap">
		<result property="id" column="id" />
		<result property="ip" column="ip" />
		<result property="port" column="port" />
		<result property="activeStatus" column="active_status" />
		<result property="nodeStatus" column="node_status" />
		<result property="delay" column="delay"/>
		<result property="latestTimeOfReceivedPacket" column="latest_time_received"/>
		<result property="latestTimeOfSentPacket" column="latest_time_sent"/>
		<result property="timeFirstConnected" column="time_first_connected"/>
		<result property="timeClosed" column="time_closed"/>
		<result property="sentBytes" column="sent_bytes"/>
		<result property="receivedBytes" column="received_bytes"/>
	</resultMap>
	
	<update id="monitorUpateNote" parameterType="Node">
		update server set 
			active_status=#{activeStatus}, 
		<if test="delay != null and delay != ''">
			delay=#{delay},
		</if>
			latest_time_received=#{latestTimeOfReceivedPacket}, 
			latest_time_sent=#{latestTimeOfSentPacket},
			time_first_connected=#{timeFirstConnected}, 
			time_closed=#{timeClosed}, 
			sent_bytes=#{sentBytes}, 
			received_bytes=#{receivedBytes} 
		where ip=#{ip} and port=#{port}
	</update>
	
	<select id="getNodes" resultMap="NodesResultMap">
		select
			id,
			ip,
			port,
			active_status,
			node_status,
			delay,
			latest_time_received,
			latest_time_sent,
			time_first_connected,
			time_closed,
			sent_bytes,
			received_bytes
		from
			server
		where
			active_status = 1 and delay > -1
		order by
			delay asc
		limit 101
	</select>
	
	<update id="updateNoteByFollower" parameterType="Node">
		update server set node_status=#{nodeStatus} where id=#{id}
	</update>
	
	<update id="updateNextPackageNode" parameterType="Node">
		update server set node_status=#{nodeStatus} where ip=#{ip} and port=#{port}
	</update>
	
	<select id="findById" resultMap="NodesResultMap" parameterType="Integer">
		SELECT id, ip, port, active_status, node_status FROM server where id=#{id}
	</select>
	
	<select id="findByIp" resultMap="NodesResultMap" parameterType="String">
		SELECT id, ip, port, active_status, node_status FROM server where ip=#{ip}
	</select>
	
	<insert id="batchInsert" parameterType="java.util.List">
		
	</insert>
	
	<insert id="insertNode" parameterType="Node">
		INSERT INTO server (ip,port) VALUES(#{ip}, #{port}) ON CONFLICT (ip) DO NOTHING
	</insert>
</mapper>
